{"ast":null,"code":"var _jsxFileName = \"C:\\\\_developer\\\\testMStar\\\\FRONT-END\\\\src\\\\components\\\\entrMercadorias.jsx\";\nimport React, { Component } from \"react\";\nimport { variable } from \"../service/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class EntrMercadorias extends Component {\n  constructor(props) {\n    super(props);\n    this.nomeHandler = e => {\n      this.setState({\n        mercNome: e.target.value\n      });\n    };\n    this.state = {\n      mercNome: \"\"\n      // mercFabri:\"\",\n      // mercTipo:\"\",\n      // descricao:\"\",\n      // local:\"\"\n    };\n  }\n\n  sendData() {\n    if (this.state.mercNome == \"\") {\n      alert(\"Favor informar o nome da Mercadoria\");\n      // }else if(this.state.fabricant == \"\"){\n      //     alert(\"Favor informar o Fabricante\");\n      // }else if(this.state.mercTipo == \"\"){\n      //     alert(\"Favor informar o tipo da mercadoria\");\n      // }else if(this.state.local == \"\"){\n      //     alert(\"Favor informar o local\");\n    } else {\n      fetch(variable.API_EMP + 'EntrMercadoria/NovaMercadoria', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          MERCAD_NOME: this.state.mercNome\n        })\n      }).then(res => res.json()).then(result => {\n        alert(result);\n        this.refreshList();\n      }, error => {\n        alert(error);\n      });\n    }\n  }\n  // fabricantHandler = (e) =>{\n  //     this.setState({mercFabri:e.target.value});\n  // }\n\n  // tipoHandler = (e) => {\n  //     this.setState({mercTipo:e.target.value})\n  // }\n\n  // descriHandler = (e) => {\n  //     this.setState({descricao:e.target.value})\n  // } \n\n  // quantiHandler = (e) => {\n  //     this.setState({quantidade:e.target.value})\n  // }\n\n  // localHandler = (e) => {\n  //     this.setState({local:e.target.value})\n  // }\n  render() {\n    const {\n      mercNome\n      // mercFabri,\n      // mercTipo,\n      // descricao,    \n      // quantidade,\n      // local\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      class: \"entForm\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          class: \"h3 mb-3 fw-normal\",\n          children: \"Cadastrar nova mercadoria\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          type: \"text\",\n          value: mercNome,\n          onChange: this.nomeHandler,\n          class: \"form-control top\",\n          placeholder: \"Digite o nome da mercadoria\",\n          autocomplete: \"off\",\n          autofocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"w-100 btn btn-lg btn-primary\",\n          onClick: () => this.sendData(),\n          children: \"Cadastrar Mercadoria\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","variable","jsxDEV","_jsxDEV","EntrMercadorias","constructor","props","nomeHandler","e","setState","mercNome","target","value","state","sendData","alert","fetch","API_EMP","method","headers","body","JSON","stringify","MERCAD_NOME","then","res","json","result","refreshList","error","render","class","children","fileName","_jsxFileName","lineNumber","columnNumber","required","type","onChange","placeholder","autocomplete","autofocus","onClick"],"sources":["C:/_developer/testMStar/FRONT-END/src/components/entrMercadorias.jsx"],"sourcesContent":["import React,{Component} from \"react\";\r\nimport { variable } from \"../service/api\";\r\n\r\nexport class EntrMercadorias extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state={\r\n            mercNome:\"\"\r\n            // mercFabri:\"\",\r\n            // mercTipo:\"\",\r\n            // descricao:\"\",\r\n            // local:\"\"\r\n        }\r\n    }\r\n\r\n    sendData(){\r\n        if(this.state.mercNome == \"\"){\r\n            alert(\"Favor informar o nome da Mercadoria\");\r\n        // }else if(this.state.fabricant == \"\"){\r\n        //     alert(\"Favor informar o Fabricante\");\r\n        // }else if(this.state.mercTipo == \"\"){\r\n        //     alert(\"Favor informar o tipo da mercadoria\");\r\n        // }else if(this.state.local == \"\"){\r\n        //     alert(\"Favor informar o local\");\r\n        }else{\r\n            fetch(variable.API_EMP+'EntrMercadoria/NovaMercadoria',{\r\n                method:'POST',\r\n                headers:{\r\n                    'Accept':'application/json',\r\n                    'Content-Type':'application/json'\r\n                },\r\n                body:JSON.stringify({\r\n                    MERCAD_NOME:this.state.mercNome\r\n                    \r\n                })\r\n            })\r\n            .then(res=>res.json())\r\n            .then((result)=>{\r\n                alert(result);\r\n                this.refreshList();\r\n            },(error)=>{\r\n                alert(error);\r\n            })\r\n        }\r\n    }\r\n\r\n    nomeHandler = (e) =>{\r\n        this.setState({mercNome:e.target.value});\r\n    }\r\n\r\n    // fabricantHandler = (e) =>{\r\n    //     this.setState({mercFabri:e.target.value});\r\n    // }\r\n\r\n    // tipoHandler = (e) => {\r\n    //     this.setState({mercTipo:e.target.value})\r\n    // }\r\n\r\n    // descriHandler = (e) => {\r\n    //     this.setState({descricao:e.target.value})\r\n    // } \r\n    \r\n    // quantiHandler = (e) => {\r\n    //     this.setState({quantidade:e.target.value})\r\n    // }\r\n\r\n    // localHandler = (e) => {\r\n    //     this.setState({local:e.target.value})\r\n    // }\r\n    \r\n    render(){\r\n        const {\r\n            mercNome\r\n            // mercFabri,\r\n            // mercTipo,\r\n            // descricao,    \r\n            // quantidade,\r\n            // local\r\n        }=this.state;\r\n\r\n        return(\r\n       \r\n            <main class=\"entForm\">\r\n                <form>\r\n               \r\n                <h1 class=\"h3 mb-3 fw-normal\">Cadastrar nova mercadoria</h1>\r\n\r\n                    <input  required type=\"text\" value={mercNome} onChange={this.nomeHandler} class=\"form-control top\" placeholder=\"Digite o nome da mercadoria\" autocomplete=\"off\" autofocus />\r\n                    {/* <input  required type=\"text\" value={mercFabri} onChange={this.fabricantHandler} class=\"form-control top\" placeholder=\"Digite o nome do fabricante\" autocomplete=\"off\" autofocus />\r\n                    <input  required type=\"text\" value={mercTipo} onChange={this.tipoHandler} class=\"form-control top\" placeholder=\"Digite o tipo da mercadoria\" autocomplete=\"off\" autofocus />\r\n                    <textarea  required type=\"text\" value={descricao} onChange={this.descriHandler} class=\"form-control top\" placeholder=\"Descrição\" autocomplete=\"off\" autofocus />\r\n                    <input  required type=\"number\" value={quantidade} onChange={this.quantiHandler} class=\"form-control top\" placeholder=\"Quantidade\" autocomplete=\"off\" autofocus />\r\n                    <input  required type=\"text\" value={local} onChange={this.localHandler} class=\"form-control top\" placeholder=\"Local\" autocomplete=\"off\" autofocus /> */}\r\n\r\n                    <button class=\"w-100 btn btn-lg btn-primary\" onClick={()=>this.sendData()}>Cadastrar Mercadoria</button>\r\n            \r\n                </form>\r\n            </main>\r\n        )\r\n    }\r\n    \r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAEC,SAAS,QAAO,OAAO;AACrC,SAASC,QAAQ,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,OAAO,MAAMC,eAAe,SAASJ,SAAS;EAE1CK,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IAAC,KA0CjBC,WAAW,GAAIC,CAAC,IAAI;MAChB,IAAI,CAACC,QAAQ,CAAC;QAACC,QAAQ,EAACF,CAAC,CAACG,MAAM,CAACC;MAAK,CAAC,CAAC;IAC5C,CAAC;IA1CG,IAAI,CAACC,KAAK,GAAC;MACPH,QAAQ,EAAC;MACT;MACA;MACA;MACA;IACJ,CAAC;EACL;;EAEAI,QAAQA,CAAA,EAAE;IACN,IAAG,IAAI,CAACD,KAAK,CAACH,QAAQ,IAAI,EAAE,EAAC;MACzBK,KAAK,CAAC,qCAAqC,CAAC;MAChD;MACA;MACA;MACA;MACA;MACA;IACA,CAAC,MAAI;MACDC,KAAK,CAACf,QAAQ,CAACgB,OAAO,GAAC,+BAA+B,EAAC;QACnDC,MAAM,EAAC,MAAM;QACbC,OAAO,EAAC;UACJ,QAAQ,EAAC,kBAAkB;UAC3B,cAAc,EAAC;QACnB,CAAC;QACDC,IAAI,EAACC,IAAI,CAACC,SAAS,CAAC;UAChBC,WAAW,EAAC,IAAI,CAACV,KAAK,CAACH;QAE3B,CAAC;MACL,CAAC,CAAC,CACDc,IAAI,CAACC,GAAG,IAAEA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACrBF,IAAI,CAAEG,MAAM,IAAG;QACZZ,KAAK,CAACY,MAAM,CAAC;QACb,IAAI,CAACC,WAAW,CAAC,CAAC;MACtB,CAAC,EAAEC,KAAK,IAAG;QACPd,KAAK,CAACc,KAAK,CAAC;MAChB,CAAC,CAAC;IACN;EACJ;EAMA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EAEAC,MAAMA,CAAA,EAAE;IACJ,MAAM;MACFpB;MACA;MACA;MACA;MACA;MACA;IACJ,CAAC,GAAC,IAAI,CAACG,KAAK;IAEZ,oBAEIV,OAAA;MAAM4B,KAAK,EAAC,SAAS;MAAAC,QAAA,eACjB7B,OAAA;QAAA6B,QAAA,gBAEA7B,OAAA;UAAI4B,KAAK,EAAC,mBAAmB;UAAAC,QAAA,EAAC;QAAyB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAExDjC,OAAA;UAAQkC,QAAQ;UAACC,IAAI,EAAC,MAAM;UAAC1B,KAAK,EAAEF,QAAS;UAAC6B,QAAQ,EAAE,IAAI,CAAChC,WAAY;UAACwB,KAAK,EAAC,kBAAkB;UAACS,WAAW,EAAC,6BAA6B;UAACC,YAAY,EAAC,KAAK;UAACC,SAAS;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAO5KjC,OAAA;UAAQ4B,KAAK,EAAC,8BAA8B;UAACY,OAAO,EAAEA,CAAA,KAAI,IAAI,CAAC7B,QAAQ,CAAC,CAAE;UAAAkB,QAAA,EAAC;QAAoB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEtG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAEf;AAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}